{"version":3,"sources":["Components/ListOfGoods/ListOfGoods.jsx","App.js","index.js"],"names":["ListOfGoods","goods","this","props","stateValue","reverse","sortBy","selectLength","copyGoods","filter","good","length","sort","a","b","localeCompare","className","map","name","key","React","Component","goodsFromServer","App","state","startButton","setState","event","target","value","type","onClick","goodsRevers","goodsSortByName","goodsSortByLength","reset","htmlFor","id","onChange","Array","keys","element","number","ReactDOM","render","document","getElementById"],"mappings":"2OAGaA,G,MAAb,4JACE,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MACR,EAA0CC,KAAKC,MAAMC,WAA7CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,aAEnBC,EAAY,YAAIP,GAAOQ,QAAO,SAAAC,GAAI,OACtCA,EAAKC,QAAUJ,KAkBjB,OAfAC,EAAUI,MAAK,SAACC,EAAGC,GACjB,OAAQR,GACN,IAAK,OACH,OAAOO,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOA,EAAEH,OAASE,EAAEF,OACtB,QACE,OAAO,MAITN,GACFG,EAAUH,UAIV,oCACE,wBAAIW,UAAU,mBACXR,EAAUS,KAAI,SAAAC,GAAI,OACjB,wBACEC,IAAKD,EACLF,UAAU,oBAETE,YAhCf,GAAiCE,IAAMC,YCCjCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2HaC,E,4MAvHbC,MAAQ,CACNC,aAAa,EACbpB,SAAS,EACTC,OAAQ,GACRC,aAAc,G,2CAGhB,WACEL,KAAKwB,SAAS,CACZrB,SAAS,EACTC,OAAQ,GACRC,aAAc,M,yBAIlB,WACEL,KAAKwB,SAAS,CAAED,aAAa,M,yBAG/B,WACEvB,KAAKwB,UAAS,SAAAF,GAAK,MAAK,CACtBnB,SAAUmB,EAAMnB,c,+BAIpB,WACEH,KAAKwB,SAAS,CAAEpB,OAAQ,a,6BAG1B,WACEJ,KAAKwB,SAAS,CAAEpB,OAAQ,W,0BAG1B,SAAaqB,GACXzB,KAAKwB,SAAS,CAAEnB,aAAcoB,EAAMC,OAAOC,U,oBAG7C,WAAU,IAAD,OACP,EAAsC3B,KAAKsB,MAAnCC,EAAR,EAAQA,YAAalB,EAArB,EAAqBA,aAErB,OACE,yBAAKS,UAAU,aACZS,EACC,4BACEK,KAAK,SACLd,UAAU,oBACVe,QAAS,kBAAM,EAAKN,gBAHtB,aAQA,6BACE,4BACEK,KAAK,SACLd,UAAU,yBACVe,QAAS,kBAAM,EAAKC,gBAHtB,WAQA,4BACEF,KAAK,SACLd,UAAU,yBACVe,QAAS,kBAAM,EAAKE,oBAHtB,uBAQA,4BACEH,KAAK,SACLd,UAAU,yBACVe,QAAS,kBAAM,EAAKG,sBAHtB,kBAQA,4BACEJ,KAAK,SACLd,UAAU,yBACVe,QAAS,kBAAM,EAAKI,UAHtB,SAQA,yBAAKnB,UAAU,qBACb,2BAAOoB,QAAQ,YAAYpB,UAAU,oBAArC,kCAEE,4BACEA,UAAU,2BACVqB,GAAG,YACHnB,KAAK,YACLoB,SAAU,SAAAX,GAAK,OAAI,EAAKpB,aAAaoB,IACrCE,MAAOtB,GAEN,YAAIgC,MAAM,IAAIC,QAAQvB,KAAI,SAACwB,GAC1B,IAAMC,EAASD,EAAU,EAEzB,OACE,4BAAQtB,IAAKuB,EAAQb,MAAOa,GACzBA,SAQb,kBAAC,EAAD,CACEzC,MAAOqB,EACPlB,WAAU,eAAOF,KAAKsB,e,GA9GlBJ,IAAMC,WCbxBsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e060461c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport class ListOfGoods extends React.Component {\n  render() {\n    const { goods } = this.props;\n    const { reverse, sortBy, selectLength } = this.props.stateValue;\n\n    const copyGoods = [...goods].filter(good => (\n      good.length >= selectLength\n    ));\n\n    copyGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.localeCompare(b);\n        case 'length':\n          return b.length - a.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (reverse) {\n      copyGoods.reverse();\n    }\n\n    return (\n      <>\n        <ul className=\"container__list\">\n          {copyGoods.map(name => (\n            <li\n              key={name}\n              className=\"container__items\"\n            >\n              {name}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst propsStateValue = PropTypes.shape({\n  reverse: PropTypes.bool.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  selectLength: PropTypes.number.isRequired,\n});\n\nListOfGoods.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  stateValue: propsStateValue.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { ListOfGoods } from './Components/ListOfGoods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    startButton: true,\n    reverse: false,\n    sortBy: '',\n    selectLength: 1,\n  };\n\n  reset() {\n    this.setState({\n      reverse: false,\n      sortBy: '',\n      selectLength: 1,\n    });\n  }\n\n  startButton() {\n    this.setState({ startButton: false });\n  }\n\n  goodsRevers() {\n    this.setState(state => ({\n      reverse: !state.reverse,\n    }));\n  }\n\n  goodsSortByLength() {\n    this.setState({ sortBy: 'length' });\n  }\n\n  goodsSortByName() {\n    this.setState({ sortBy: 'name' });\n  }\n\n  selectLength(event) {\n    this.setState({ selectLength: event.target.value });\n  }\n\n  render() {\n    const { startButton, selectLength } = this.state;\n\n    return (\n      <div className=\"container\">\n        {startButton ? (\n          <button\n            type=\"button\"\n            className=\"container__button\"\n            onClick={() => this.startButton()}\n          >\n            Push me:)\n          </button>\n        ) : (\n          <div>\n            <button\n              type=\"button\"\n              className=\"container__Button-list\"\n              onClick={() => this.goodsRevers()}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"container__Button-list\"\n              onClick={() => this.goodsSortByName()}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"container__Button-list\"\n              onClick={() => this.goodsSortByLength()}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"container__Button-list\"\n              onClick={() => this.reset()}\n            >\n              Reset\n            </button>\n\n            <div className=\"container__select\">\n              <label htmlFor=\"minLength\" className=\"container__label\">\n                Select the minimum list length:\n                <select\n                  className=\"container__button-select\"\n                  id=\"minLength\"\n                  name=\"minLength\"\n                  onChange={event => this.selectLength(event)}\n                  value={selectLength}\n                >\n                  {[...Array(10).keys()].map((element) => {\n                    const number = element + 1;\n\n                    return (\n                      <option key={number} value={number}>\n                        {number}\n                      </option>\n                    );\n                  })}\n                </select>\n              </label>\n            </div>\n\n            <ListOfGoods\n              goods={goodsFromServer}\n              stateValue={{ ...this.state }}\n            />\n          </div>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}